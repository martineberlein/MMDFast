Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['company_size_unknown', 'last_new_job', 'experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.796

Specificity: 0.747 Precision: 0.383 Recall: 0.529
CPU time used extracting features: 1.1343951089999997 seconds
CPU time used overall without disjunctions: 72.242897105 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

city_development_index <= 0.796 or
city_development_index <= 0.887

Specificity: 0.616 Precision: 0.323 Recall: 0.612
CPU time used extracting features: 1.1343951089999997 seconds
CPU time used overall with disjunctions: 127.129356211 seconds
