Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['creatinine_phosphokinase', 'age', 'serum_creatinine', 'ejection_fraction', 'platelets']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

creatinine_phosphokinase <= 5850.91 and age > 79.40

Specificity: 0.985 Precision: 0.75 Recall: 0.125
CPU time used extracting features: 0.2085496899999999 seconds
CPU time used overall without disjunctions: 222.801282538 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

creatinine_phosphokinase <= 5850.91 and age > 79.40 or
creatinine_phosphokinase <= 1170.39 and ejection_fraction <= 27.61 or
ejection_fraction > 63.67 and age <= 76.62 or
serum_creatinine <= 2.45 and serum_creatinine <= 0.65 or
age > 75.35 and age > 80.56 or
platelets <= 321746.86 and platelets > 306496.67

Specificity: 0.833 Precision: 0.621 Recall: 0.75
CPU time used extracting features: 0.2085496899999999 seconds
CPU time used overall with disjunctions: 1210.2565413319999 seconds
