Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Sulfate', 'Chloramines', 'Hardness', 'Conductivity', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

ph > 5.4796481 and Conductivity > 460.2273102

Specificity: 0.741 Precision: 0.441 Recall: 0.419
CPU time used extracting features: 0.41034378900000235 seconds
CPU time used overall without disjunctions: 0.43522352800000164 seconds

Best ruleset with most influential features and decision trees with disjunctions:

ph > 5.4796481 and Conductivity > 460.2273102 or
ph > 5.8840034 and Conductivity <= 368.2585297 or
Hardness <= 144.1657181 and Chloramines <= 8.2333455

Specificity: 0.564 Precision: 0.445 Recall: 0.717
CPU time used extracting features: 0.41034378900000235 seconds
CPU time used overall with disjunctions: 0.4520885190000037 seconds
