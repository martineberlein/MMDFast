Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.645

Specificity: 0.881 Precision: 0.469 Recall: 0.387
CPU time used extracting features: 1.3777218189999978 seconds
CPU time used overall without disjunctions: 49.906857519 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

city_development_index <= 0.739 or
city_development_index <= 0.645

Specificity: 0.815 Precision: 0.413 Recall: 0.448
CPU time used extracting features: 1.3777218189999978 seconds
CPU time used overall with disjunctions: 107.34187110300002 seconds
