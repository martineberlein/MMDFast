Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['arrival_date_day_of_month', 'adr', 'lead_time']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

lead_time > 18.37 and lead_time <= 340.49

Specificity: 0.316 Precision: 0.197 Recall: 0.831
CPU time used extracting features: 1.0970201690000003 seconds
CPU time used overall without disjunctions: 191.952455302 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

lead_time > 18.37 and lead_time <= 340.49

Specificity: 0.316 Precision: 0.197 Recall: 0.831
CPU time used extracting features: 1.0970201690000003 seconds
CPU time used overall with disjunctions: 191.95310890899998 seconds
