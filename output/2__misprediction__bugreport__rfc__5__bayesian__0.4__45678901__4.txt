Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['meanCommentSize', 'InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

InitialActivityCount > 1.51 and activitysequence > 0.33

Specificity: 0.904 Precision: 0.285 Recall: 0.24
CPU time used extracting features: 0.8829857239999974 seconds
CPU time used overall without disjunctions: 235.397388247 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

InitialActivityCount > 1.51 and activitysequence > 0.33 or
activitysequence > 0.32 and meanCommentSize > 0.00

Specificity: 0.739 Precision: 0.259 Recall: 0.576
CPU time used extracting features: 0.8829857239999974 seconds
CPU time used overall with disjunctions: 466.36604124300004 seconds
