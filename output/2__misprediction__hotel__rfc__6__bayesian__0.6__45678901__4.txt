Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['stays_in_week_nights', 'nights', 'arrival_date_month', 'arrival_date_day_of_month', 'adr', 'lead_time']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

lead_time <= 133.22 and adr > 100.53

Specificity: 0.71 Precision: 0.214 Recall: 0.396
CPU time used extracting features: 1.1064714779999996 seconds
CPU time used overall without disjunctions: 200.151680845 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

lead_time <= 133.22 and adr > 100.53 or
stays_in_week_nights > 3.59 and adr > 86.14 or
lead_time > 26.94 and lead_time <= 103.36

Specificity: 0.489 Precision: 0.208 Recall: 0.673
CPU time used extracting features: 1.1064714779999996 seconds
CPU time used overall with disjunctions: 592.9434104129999 seconds
