Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.50 and activitysequence > 0.33

Specificity: 0.915 Precision: 0.347 Recall: 0.285
CPU time used extracting features: 0.8802698000000007 seconds
CPU time used overall without disjunctions: 213.679543586 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.50 and activitysequence > 0.33 or
activitysequence > 0.22

Specificity: 0.549 Precision: 0.233 Recall: 0.864
CPU time used extracting features: 0.8802698000000007 seconds
CPU time used overall with disjunctions: 436.66874016300005 seconds
