Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['NActivityInProject', 'InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence > 0.26 and projectCoverage <= 0.97

Specificity: 0.591 Precision: 0.231 Recall: 0.806
CPU time used extracting features: 0.8494824829999992 seconds
CPU time used overall without disjunctions: 199.561868611 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence > 0.26 and projectCoverage <= 0.97

Specificity: 0.591 Precision: 0.231 Recall: 0.806
CPU time used extracting features: 0.8494824829999992 seconds
CPU time used overall with disjunctions: 199.56188405 seconds
