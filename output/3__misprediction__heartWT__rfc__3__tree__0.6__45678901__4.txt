Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['serum_sodium', 'serum_creatinine', 'age']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

serum_creatinine > 5.4

Specificity: 1.0 Precision: 1.0 Recall: 0.13
CPU time used extracting features: 0.2103844900000027 seconds
CPU time used overall without disjunctions: 0.22027730800000356 seconds

Best ruleset with most influential features and decision trees with disjunctions:

serum_creatinine > 5.4 or
age > 69.0 and serum_sodium <= 144.5 or
age > 72.5

Specificity: 0.731 Precision: 0.455 Recall: 0.652
CPU time used extracting features: 0.2103844900000027 seconds
CPU time used overall with disjunctions: 0.23268389900000486 seconds
