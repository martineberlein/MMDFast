Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['serum_creatinine', 'platelets', 'age', 'ejection_fraction', 'creatinine_phosphokinase']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

ejection_fraction <= 32.5 and creatinine_phosphokinase > 92.0

Specificity: 0.871 Precision: 0.55 Recall: 0.55
CPU time used extracting features: 0.20818210799999903 seconds
CPU time used overall without disjunctions: 0.21796419900000075 seconds

Best ruleset with most influential features and decision trees with disjunctions:

ejection_fraction <= 32.5 and creatinine_phosphokinase > 92.0 or
age > 83.0 and age <= 85.5

Specificity: 0.857 Precision: 0.583 Recall: 0.7
CPU time used extracting features: 0.20818210799999903 seconds
CPU time used overall with disjunctions: 0.2224444090000013 seconds
