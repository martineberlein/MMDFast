Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['serum_creatinine', 'age', 'platelets', 'creatinine_phosphokinase', 'ejection_fraction']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

ejection_fraction <= 28.94 and ejection_fraction > 20.00

Specificity: 0.923 Precision: 0.667 Recall: 0.4
CPU time used extracting features: 0.20432312599999847 seconds
CPU time used overall without disjunctions: 219.34366798999997 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

ejection_fraction <= 28.94 and ejection_fraction > 20.00 or
age > 78.34 and age <= 88.67 or
creatinine_phosphokinase <= 150.12 and ejection_fraction <= 34.78

Specificity: 0.877 Precision: 0.667 Recall: 0.64
CPU time used extracting features: 0.20432312599999847 seconds
CPU time used overall with disjunctions: 684.5444474830001 seconds
