Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'file_modified', 'line_removed', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Preprocess data for islearn...
Construct string inputs...
['line_added' 'file_modified' 'line_removed' 'commit_num'
 'parallel_changed_file_num' 'is_conflict' 'misprediction']
['line_added', 'file_modified', 'line_removed', 'commit_num', 'parallel_changed_file_num']
New grammar...
{'<start>': ['<line_added> <file_modified> <line_removed> <commit_num> <parallel_changed_file_num>'], '<parallel_changed_file_num>': ['0', '<onenine><maybe_digits>'], '<commit_num>': ['0', '<onenine><maybe_digits>'], '<file_modified>': ['0', '<onenine><maybe_digits>'], '<line_added>': ['0', '<onenine><maybe_digits>'], '<line_removed>': ['0', '<onenine><maybe_digits>'], '<onenine>': ['1', '2', '3', '4', '5', '6', '7', '8', '9'], '<maybe_digits>': ['', '<digits>'], '<digits>': ['<digit>', '<digit><digits>'], '<digit>': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']}
Unrelevant nonterminals in grammar...
{'<digits>', '<onenine>', '<maybe_digits>', '<digit>'}
Run IsLearn to create misprediction explanation without disjunctions...
Best ruleset with most influential features and Islearn without disjunctions:

parallel_changed_file_num > 0.0 and file_modified > 1.0

Specificity: 0.965 Precision: 0.358 Recall: 0.312
CPU time used extracting features: 1.5812536329999993 seconds
CPU time used overall without disjunctions: 1080.980352174 seconds
