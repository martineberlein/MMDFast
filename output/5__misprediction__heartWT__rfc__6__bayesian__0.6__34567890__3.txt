Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['serum_sodium', 'serum_creatinine', 'platelets', 'age', 'ejection_fraction', 'creatinine_phosphokinase']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

ejection_fraction <= 32.86 and creatinine_phosphokinase <= 1443.98

Specificity: 0.814 Precision: 0.458 Recall: 0.55
CPU time used extracting features: 0.20453788000000017 seconds
CPU time used overall without disjunctions: 215.20911963100002 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

ejection_fraction <= 32.86 and creatinine_phosphokinase <= 1443.98 or
ejection_fraction > 53.17 and age > 80.26

Specificity: 0.814 Precision: 0.48 Recall: 0.6
CPU time used extracting features: 0.20453788000000017 seconds
CPU time used overall with disjunctions: 441.18326495099996 seconds
