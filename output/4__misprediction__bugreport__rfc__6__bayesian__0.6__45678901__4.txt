Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['recentActivityCount', 'meanCommentSize', 'InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.53 and activitysequence > 0.29

Specificity: 0.857 Precision: 0.3 Recall: 0.386
CPU time used extracting features: 0.8813878160000002 seconds
CPU time used overall without disjunctions: 228.904380698 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.53 and activitysequence > 0.29 or
activitysequence > 0.22 and activitysequence > 0.03

Specificity: 0.549 Precision: 0.233 Recall: 0.864
CPU time used extracting features: 0.8813878160000002 seconds
CPU time used overall with disjunctions: 452.971048967 seconds
