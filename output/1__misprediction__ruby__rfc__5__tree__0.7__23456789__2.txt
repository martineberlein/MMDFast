Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'file_modified', 'line_removed', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.933 Precision: 0.366 Recall: 0.625
CPU time used extracting features: 1.2590122400000006 seconds
CPU time used overall without disjunctions: 1.3609145550000008 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and line_removed > 29.5

Specificity: 0.92 Precision: 0.363 Recall: 0.73
CPU time used extracting features: 1.2590122400000006 seconds
CPU time used overall with disjunctions: 1.3710654680000012 seconds
