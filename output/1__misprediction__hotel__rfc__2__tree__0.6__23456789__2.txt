Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['adr', 'lead_time']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

lead_time > 6.5 and lead_time <= 257.5

Specificity: 0.295 Precision: 0.202 Recall: 0.88
CPU time used extracting features: 1.578733163999999 seconds
CPU time used overall without disjunctions: 1.626840374999997 seconds

Best ruleset with most influential features and decision trees with disjunctions:

lead_time > 6.5 and lead_time <= 257.5

Specificity: 0.295 Precision: 0.202 Recall: 0.88
CPU time used extracting features: 1.578733163999999 seconds
CPU time used overall with disjunctions: 1.6268719149999988 seconds
