Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.645

Specificity: 0.879 Precision: 0.475 Recall: 0.392
CPU time used extracting features: 1.393824647999999 seconds
CPU time used overall without disjunctions: 20.37228242 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

city_development_index <= 0.74 or
city_development_index <= 0.645

Specificity: 0.811 Precision: 0.418 Recall: 0.333
CPU time used extracting features: 1.393824647999999 seconds
CPU time used overall with disjunctions: 55.267659824999996 seconds
