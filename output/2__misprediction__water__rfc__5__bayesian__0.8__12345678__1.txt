Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Sulfate', 'Chloramines', 'Hardness', 'Conductivity', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

Conductivity > 459.59 and ph > 3.27

Specificity: 0.7 Precision: 0.413 Recall: 0.434
CPU time used extracting features: 0.38969615899999965 seconds
CPU time used overall without disjunctions: 226.900779554 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

Conductivity > 459.59 and ph > 3.27 or
Conductivity <= 369.29 and Hardness > 150.62 or
Conductivity > 423.71 and Sulfate > 243.08

Specificity: 0.328 Precision: 0.378 Recall: 0.838
CPU time used extracting features: 0.38969615899999965 seconds
CPU time used overall with disjunctions: 700.5682335270001 seconds
