Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['meanCommentSize', 'InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

activitysequence > 0.205812 and activitysequence <= 0.6700955

Specificity: 0.733 Precision: 0.278 Recall: 0.65
CPU time used extracting features: 1.0105158719999991 seconds
CPU time used overall without disjunctions: 1.0577914029999995 seconds

Best ruleset with most influential features and decision trees with disjunctions:

activitysequence > 0.205812 and activitysequence <= 0.6700955 or
activitysequence > 0.681461 and meanCommentSize > 12.25 or
projectCoverage <= 0.970539 and activitysequence > 0.6748305

Specificity: 0.55 Precision: 0.235 Recall: 0.872
CPU time used extracting features: 1.0105158719999991 seconds
CPU time used overall with disjunctions: 1.0807179819999995 seconds
