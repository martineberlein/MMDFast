Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['ticketCleanedBodyLen', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.64 and activitysequence > 0.24

Specificity: 0.749 Precision: 0.275 Recall: 0.613
CPU time used extracting features: 0.8454334649999993 seconds
CPU time used overall without disjunctions: 203.65425579599997 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.64 and activitysequence > 0.24

Specificity: 0.749 Precision: 0.275 Recall: 0.613
CPU time used extracting features: 0.8454334649999993 seconds
CPU time used overall with disjunctions: 203.65427214699997 seconds
