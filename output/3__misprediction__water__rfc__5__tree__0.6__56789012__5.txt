Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Chloramines', 'Solids', 'Conductivity', 'Sulfate', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

Sulfate <= 389.9606323 and Conductivity > 267.3501282

Specificity: 0.109 Precision: 0.344 Recall: 0.95
CPU time used extracting features: 0.4000346919999984 seconds
CPU time used overall without disjunctions: 0.42246506200000056 seconds

Best ruleset with most influential features and decision trees with disjunctions:

Sulfate <= 389.9606323 and Conductivity > 267.3501282

Specificity: 0.109 Precision: 0.344 Recall: 0.95
CPU time used extracting features: 0.4000346919999984 seconds
CPU time used overall with disjunctions: 0.42248979800000086 seconds
