Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'file_modified', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.935 Precision: 0.365 Recall: 0.625
CPU time used extracting features: 1.1875514450000004 seconds
CPU time used overall without disjunctions: 1.2752845450000017 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.935 Precision: 0.365 Recall: 0.625
CPU time used extracting features: 1.1875514450000004 seconds
CPU time used overall with disjunctions: 1.2753102530000007 seconds
