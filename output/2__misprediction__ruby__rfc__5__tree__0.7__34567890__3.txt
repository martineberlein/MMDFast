Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['file_modified', 'line_added', 'line_removed', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.931 Precision: 0.333 Recall: 0.602
CPU time used extracting features: 1.2957652979999992 seconds
CPU time used overall without disjunctions: 1.4134847639999997 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and file_modified > 1.5

Specificity: 0.915 Precision: 0.337 Recall: 0.749
CPU time used extracting features: 1.2957652979999992 seconds
CPU time used overall with disjunctions: 1.4244002420000008 seconds
