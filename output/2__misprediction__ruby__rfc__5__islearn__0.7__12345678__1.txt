Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['duration', 'line_added', 'file_modified', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Preprocess data for islearn...
Construct string inputs...
['duration' 'line_added' 'file_modified' 'commit_num'
 'parallel_changed_file_num' 'is_conflict' 'misprediction']
['duration', 'line_added', 'file_modified', 'commit_num', 'parallel_changed_file_num']
New grammar...
{'<start>': ['<duration> <line_added> <file_modified> <commit_num> <parallel_changed_file_num>'], '<parallel_changed_file_num>': ['0', '<onenine><maybe_digits>'], '<commit_num>': ['0', '<onenine><maybe_digits>'], '<file_modified>': ['0', '<onenine><maybe_digits>'], '<line_added>': ['0', '<onenine><maybe_digits>'], '<duration>': ['0', '<onenine><maybe_digits>'], '<onenine>': ['1', '2', '3', '4', '5', '6', '7', '8', '9'], '<maybe_digits>': ['', '<digits>'], '<digits>': ['<digit>', '<digit><digits>'], '<digit>': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']}
Unrelevant nonterminals in grammar...
{'<maybe_digits>', '<digits>', '<onenine>', '<digit>'}
Run IsLearn to create misprediction explanation without disjunctions...
Best ruleset with most influential features and Islearn without disjunctions:

parallel_changed_file_num > 0.0 and duration <= 97.0

Specificity: 0.866 Precision: 0.262 Recall: 0.821
CPU time used extracting features: 1.469947315999999 seconds
CPU time used overall without disjunctions: 861.0670446099999 seconds
