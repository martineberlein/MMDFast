Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['serum_sodium', 'serum_creatinine', 'age', 'platelets', 'creatinine_phosphokinase', 'ejection_fraction']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

ejection_fraction <= 30.56 and age <= 71.75

Specificity: 0.862 Precision: 0.609 Recall: 0.56
CPU time used extracting features: 0.20344780299999954 seconds
CPU time used overall without disjunctions: 198.814861127 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

ejection_fraction <= 30.56 and age <= 71.75 or
ejection_fraction > 42.60 and age > 67.49

Specificity: 0.815 Precision: 0.586 Recall: 0.68
CPU time used extracting features: 0.20344780299999954 seconds
CPU time used overall with disjunctions: 429.458520109 seconds
