Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['recentActivityCount', 'NActivityInProject', 'InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence > 0.22 and recentActivityCount > 0.00

Specificity: 0.624 Precision: 0.241 Recall: 0.775
CPU time used extracting features: 0.8626307520000012 seconds
CPU time used overall without disjunctions: 250.95660092600002 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence > 0.22 and recentActivityCount > 0.00

Specificity: 0.624 Precision: 0.241 Recall: 0.775
CPU time used extracting features: 0.8626307520000012 seconds
CPU time used overall with disjunctions: 250.956615563 seconds
