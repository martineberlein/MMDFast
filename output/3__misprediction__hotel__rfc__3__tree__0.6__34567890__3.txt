Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['arrival_date_day_of_month', 'adr', 'lead_time']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

lead_time > 7.5 and lead_time <= 211.5

Specificity: 0.355 Precision: 0.212 Recall: 0.833
CPU time used extracting features: 1.3932914850000024 seconds
CPU time used overall without disjunctions: 1.4247453410000013 seconds

Best ruleset with most influential features and decision trees with disjunctions:

lead_time > 7.5 and lead_time <= 211.5

Specificity: 0.355 Precision: 0.212 Recall: 0.833
CPU time used extracting features: 1.3932914850000024 seconds
CPU time used overall with disjunctions: 1.424781719000002 seconds
