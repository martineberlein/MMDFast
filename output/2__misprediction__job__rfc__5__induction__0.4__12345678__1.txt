Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['company_size_unknown', 'last_new_job', 'experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.74

Specificity: 0.809 Precision: 0.423 Recall: 0.472
CPU time used extracting features: 1.0203129890000007 seconds
CPU time used overall without disjunctions: 102.19836806 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

city_development_index <= 0.74 or
city_development_index <= 0.645

Specificity: 0.809 Precision: 0.424 Recall: 0.468
CPU time used extracting features: 1.0203129890000007 seconds
CPU time used overall with disjunctions: 140.270340683 seconds
