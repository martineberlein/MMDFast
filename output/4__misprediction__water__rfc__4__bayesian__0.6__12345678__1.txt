Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Chloramines', 'Hardness', 'Conductivity', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

Conductivity > 419.86 and Conductivity > 294.59

Specificity: 0.52 Precision: 0.371 Recall: 0.581
CPU time used extracting features: 0.3863426919999995 seconds
CPU time used overall without disjunctions: 205.197435999 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

Conductivity > 419.86 and Conductivity > 294.59 or
Conductivity <= 369.08 and Chloramines > 5.23

Specificity: 0.305 Precision: 0.372 Recall: 0.843
CPU time used extracting features: 0.3863426919999995 seconds
CPU time used overall with disjunctions: 424.70941601999994 seconds
