Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_removed', 'file_modified', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.922 Precision: 0.295 Recall: 0.601
CPU time used extracting features: 1.5883847710000012 seconds
CPU time used overall without disjunctions: 1.692656981999999 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.922 Precision: 0.295 Recall: 0.601
CPU time used extracting features: 1.5883847710000012 seconds
CPU time used overall with disjunctions: 1.6926840429999999 seconds
