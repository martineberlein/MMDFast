Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.61 and activitysequence > 0.20

Specificity: 0.759 Precision: 0.278 Recall: 0.585
CPU time used extracting features: 0.8851240340000004 seconds
CPU time used overall without disjunctions: 205.192369558 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.61 and activitysequence > 0.20 or
activitysequence <= 0.87 and activitysequence > 0.42

Specificity: 0.623 Precision: 0.254 Recall: 0.81
CPU time used extracting features: 0.8851240340000004 seconds
CPU time used overall with disjunctions: 419.16376576199997 seconds
