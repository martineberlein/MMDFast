Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['commit_num', 'file_modified', 'line_added', 'line_removed', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.92 Precision: 0.339 Recall: 0.554
CPU time used extracting features: 1.7043343869999994 seconds
CPU time used overall without disjunctions: 1.8804060939999978 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and line_added <= -22528.0 or
parallel_changed_file_num > 0.5 and line_removed > -1.5

Specificity: 0.881 Precision: 0.331 Recall: 0.796
CPU time used extracting features: 1.7043343869999994 seconds
CPU time used overall with disjunctions: 1.910946397 seconds
