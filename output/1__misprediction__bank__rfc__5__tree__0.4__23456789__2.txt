Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['campaign', 'day_of_week', 'euribor3m', 'age', 'duration']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

duration > 524.5 and duration > 645.5

Specificity: 0.959 Precision: 0.444 Recall: 0.352
CPU time used extracting features: 1.033362854 seconds
CPU time used overall without disjunctions: 1.0712564130000004 seconds

Best ruleset with most influential features and decision trees with disjunctions:

duration > 524.5 and duration > 645.5 or
euribor3m <= 1.0785 and duration > 117.5

Specificity: 0.903 Precision: 0.384 Recall: 0.643
CPU time used extracting features: 1.033362854 seconds
CPU time used overall with disjunctions: 1.0808177110000017 seconds
