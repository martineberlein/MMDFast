Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['InitialActivityCount', 'meanCommentSize', 'projectCoverage', 'ticketCleanedBodyLen', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.90 and activitysequence > 0.24

Specificity: 0.605 Precision: 0.255 Recall: 0.86
CPU time used extracting features: 0.8838485360000021 seconds
CPU time used overall without disjunctions: 244.41168146500002 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.90 and activitysequence > 0.24

Specificity: 0.605 Precision: 0.255 Recall: 0.86
CPU time used extracting features: 0.8838485360000021 seconds
CPU time used overall with disjunctions: 244.411697716 seconds
