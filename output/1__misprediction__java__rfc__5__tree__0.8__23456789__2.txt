Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'file_modified', 'commit_num', 'line_removed', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.921 Precision: 0.296 Recall: 0.61
CPU time used extracting features: 1.6856149219999992 seconds
CPU time used overall without disjunctions: 1.8577420619999998 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and commit_num > 795.0 or
parallel_changed_file_num > 0.5 and file_modified > 1.5

Specificity: 0.898 Precision: 0.301 Recall: 0.808
CPU time used extracting features: 1.6856149219999992 seconds
CPU time used overall with disjunctions: 1.8885439439999985 seconds
