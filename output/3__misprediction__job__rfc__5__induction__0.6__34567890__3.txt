Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['company_size_unknown', 'last_new_job', 'experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.645

Specificity: 0.881 Precision: 0.469 Recall: 0.387
CPU time used extracting features: 0.9944499229999977 seconds
CPU time used overall without disjunctions: 68.22778598100001 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

experience <= 7 or
city_development_index <= 0.739

Specificity: 0.517 Precision: 0.287 Recall: 0.695
CPU time used extracting features: 0.9944499229999977 seconds
CPU time used overall with disjunctions: 131.27604770099998 seconds
