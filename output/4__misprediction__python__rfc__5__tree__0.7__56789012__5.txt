Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'file_modified', 'duration', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.925 Precision: 0.338 Recall: 0.603
CPU time used extracting features: 1.3338167259999985 seconds
CPU time used overall without disjunctions: 1.442154991999999 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and file_modified > 7.5

Specificity: 0.913 Precision: 0.345 Recall: 0.728
CPU time used extracting features: 1.3338167259999985 seconds
CPU time used overall with disjunctions: 1.4532554059999967 seconds
