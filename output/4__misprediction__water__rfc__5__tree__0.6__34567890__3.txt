Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Sulfate', 'Chloramines', 'Hardness', 'Conductivity', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

ph > 5.6238136 and Chloramines > 7.0370619

Specificity: 0.605 Precision: 0.429 Recall: 0.603
CPU time used extracting features: 0.550324118999999 seconds
CPU time used overall without disjunctions: 0.5856168539999977 seconds

Best ruleset with most influential features and decision trees with disjunctions:

ph > 5.6238136 and Chloramines > 7.0370619

Specificity: 0.605 Precision: 0.429 Recall: 0.603
CPU time used extracting features: 0.550324118999999 seconds
CPU time used overall with disjunctions: 0.5856495150000001 seconds
