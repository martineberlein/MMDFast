Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.645

Specificity: 0.875 Precision: 0.47 Recall: 0.382
CPU time used extracting features: 1.4076966129999988 seconds
CPU time used overall without disjunctions: 30.399521343999997 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

city_development_index <= 0.645 or
city_development_index <= 0.74

Specificity: 0.808 Precision: 0.421 Recall: 0.46
CPU time used extracting features: 1.4076966129999988 seconds
CPU time used overall with disjunctions: 80.100929175 seconds
