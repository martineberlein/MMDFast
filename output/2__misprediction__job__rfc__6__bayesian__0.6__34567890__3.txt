Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['relevent_experience', 'company_size_unknown', 'last_new_job', 'experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

city_development_index <= 0.62 and experience <= 14.82

Specificity: 0.979 Precision: 0.516 Recall: 0.08
CPU time used extracting features: 0.9712600760000001 seconds
CPU time used overall without disjunctions: 238.69112819799997 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

city_development_index <= 0.62 and experience <= 14.82 or
last_new_job > 0.66 and company_size_unknown > 0.96 or
company_size_unknown > 0.54 and experience <= 5.10 or
city_development_index <= 0.63 and experience > 14.23 or
city_development_index <= 0.81 and experience <= 15.21

Specificity: 0.596 Precision: 0.35 Recall: 0.796
CPU time used extracting features: 0.9712600760000001 seconds
CPU time used overall with disjunctions: 993.492974191 seconds
