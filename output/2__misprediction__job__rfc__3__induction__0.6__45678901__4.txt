Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.645

Specificity: 0.878 Precision: 0.479 Recall: 0.392
CPU time used extracting features: 1.0291282850000023 seconds
CPU time used overall without disjunctions: 35.09529074299999 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

city_development_index <= 0.645 or
city_development_index <= 0.802

Specificity: 0.738 Precision: 0.369 Recall: 0.518
CPU time used extracting features: 1.0291282850000023 seconds
CPU time used overall with disjunctions: 89.97594835899999 seconds
