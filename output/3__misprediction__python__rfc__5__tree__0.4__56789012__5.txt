Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'file_modified', 'duration', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.925 Precision: 0.338 Recall: 0.603
CPU time used extracting features: 1.4920663490000017 seconds
CPU time used overall without disjunctions: 1.588726255000001 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.925 Precision: 0.338 Recall: 0.603
CPU time used extracting features: 1.4920663490000017 seconds
CPU time used overall with disjunctions: 1.5887525240000002 seconds
