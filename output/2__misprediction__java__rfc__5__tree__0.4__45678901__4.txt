Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['file_modified', 'line_removed', 'commit_num', 'line_added', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and line_added > 362.5

Specificity: 0.975 Precision: 0.397 Recall: 0.291
CPU time used extracting features: 1.579502790000003 seconds
CPU time used overall without disjunctions: 1.753796439000002 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and line_added > 362.5 or
parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.909 Precision: 0.314 Recall: 0.737
CPU time used extracting features: 1.579502790000003 seconds
CPU time used overall with disjunctions: 1.7675142870000045 seconds
