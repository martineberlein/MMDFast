Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['developer_num', 'file_modified', 'line_added', 'line_removed', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and developer_num > -0.5

Specificity: 0.94 Precision: 0.35 Recall: 0.566
CPU time used extracting features: 1.2480262299999971 seconds
CPU time used overall without disjunctions: 1.3677558509999983 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and developer_num > -0.5 or
parallel_changed_file_num > 1.5 and line_removed <= 59844.0

Specificity: 0.901 Precision: 0.326 Recall: 0.835
CPU time used extracting features: 1.2480262299999971 seconds
CPU time used overall with disjunctions: 1.3802700550000004 seconds
