Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'file_modified', 'duration', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.925 Precision: 0.338 Recall: 0.603
CPU time used extracting features: 1.360692830999998 seconds
CPU time used overall without disjunctions: 1.517967069000001 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and file_modified > 7.5 or
parallel_changed_file_num > 0.5 and duration <= -58.5 or
parallel_changed_file_num > 0.5 and duration <= 7409.0

Specificity: 0.803 Precision: 0.24 Recall: 0.983
CPU time used extracting features: 1.360692830999998 seconds
CPU time used overall with disjunctions: 1.562468477000003 seconds
