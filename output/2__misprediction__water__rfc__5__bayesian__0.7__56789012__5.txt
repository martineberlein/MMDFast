Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Chloramines', 'Solids', 'Conductivity', 'Sulfate', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

Sulfate <= 391.12 and Sulfate > 189.67

Specificity: 0.101 Precision: 0.348 Recall: 0.975
CPU time used extracting features: 0.4000267690000001 seconds
CPU time used overall without disjunctions: 234.842705479 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

Sulfate <= 391.12 and Sulfate > 189.67

Specificity: 0.101 Precision: 0.348 Recall: 0.975
CPU time used extracting features: 0.4000267690000001 seconds
CPU time used overall with disjunctions: 234.842722912 seconds
