Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['meanCommentSize', 'InitialActivityCount', 'projectCoverage', 'ticketCleanedBodyLen', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

activitysequence > 0.226829 and activitysequence <= 0.6691455

Specificity: 0.73 Precision: 0.276 Recall: 0.665
CPU time used extracting features: 0.8991540160000007 seconds
CPU time used overall without disjunctions: 0.9746723710000005 seconds

Best ruleset with most influential features and decision trees with disjunctions:

activitysequence > 0.226829 and activitysequence <= 0.6691455 or
activitysequence > 0.205812 and meanCommentSize > 11.5416665

Specificity: 0.648 Precision: 0.263 Recall: 0.807
CPU time used extracting features: 0.8991540160000007 seconds
CPU time used overall with disjunctions: 0.9838678829999985 seconds
