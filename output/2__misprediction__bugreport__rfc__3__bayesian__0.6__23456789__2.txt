Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.48 and activitysequence > 0.25

Specificity: 0.851 Precision: 0.307 Recall: 0.429
CPU time used extracting features: 0.8667745889999985 seconds
CPU time used overall without disjunctions: 248.50242710100002 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.48 and activitysequence > 0.25 or
activitysequence > 0.24 and projectCoverage <= 0.05 or
activitysequence <= 0.55 and activitysequence > 0.19

Specificity: 0.75 Precision: 0.282 Recall: 0.638
CPU time used extracting features: 0.8667745889999985 seconds
CPU time used overall with disjunctions: 680.6175747540001 seconds
