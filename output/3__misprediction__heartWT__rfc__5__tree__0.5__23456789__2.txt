Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['serum_creatinine', 'age', 'platelets', 'creatinine_phosphokinase', 'ejection_fraction']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

ejection_fraction <= 32.5 and age <= 71.0

Specificity: 0.862 Precision: 0.609 Recall: 0.56
CPU time used extracting features: 0.21063026299999876 seconds
CPU time used overall without disjunctions: 0.21799277799999928 seconds

Best ruleset with most influential features and decision trees with disjunctions:

ejection_fraction <= 32.5 and age <= 71.0

Specificity: 0.862 Precision: 0.609 Recall: 0.56
CPU time used extracting features: 0.21063026299999876 seconds
CPU time used overall with disjunctions: 0.2180126460000018 seconds
