Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['file_modified', 'line_added', 'line_removed', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.915 Precision: 0.313 Recall: 0.567
CPU time used extracting features: 1.4801587430000005 seconds
CPU time used overall without disjunctions: 1.5924146919999984 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and file_modified > 39.5

Specificity: 0.909 Precision: 0.323 Recall: 0.64
CPU time used extracting features: 1.4801587430000005 seconds
CPU time used overall with disjunctions: 1.6045269809999958 seconds
