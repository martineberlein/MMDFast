Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['creatinine_phosphokinase', 'platelets', 'serum_creatinine', 'age']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

age > 79.0 and serum_creatinine <= 1.7

Specificity: 1.0 Precision: 1.0 Recall: 0.267
CPU time used extracting features: 0.2164683029999992 seconds
CPU time used overall without disjunctions: 0.22667649299999937 seconds

Best ruleset with most influential features and decision trees with disjunctions:

age > 79.0 and serum_creatinine <= 1.7 or
serum_creatinine <= 2.75 and age > 57.5

Specificity: 0.467 Precision: 0.439 Recall: 0.833
CPU time used extracting features: 0.2164683029999992 seconds
CPU time used overall with disjunctions: 0.23126894399999998 seconds
