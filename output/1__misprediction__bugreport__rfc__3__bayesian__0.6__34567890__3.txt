Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['projectCoverage', 'ticketCleanedBodyLen', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence > 0.29 and activitysequence <= 0.57

Specificity: 0.823 Precision: 0.276 Recall: 0.432
CPU time used extracting features: 0.8427657889999995 seconds
CPU time used overall without disjunctions: 216.039698361 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence > 0.29 and activitysequence <= 0.57 or
activitysequence > 0.23 and activitysequence <= 0.86

Specificity: 0.625 Precision: 0.246 Recall: 0.785
CPU time used extracting features: 0.8427657889999995 seconds
CPU time used overall with disjunctions: 411.1305093980001 seconds
