Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['serum_creatinine', 'ejection_fraction', 'platelets']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

platelets <= 200500.0 and platelets > 184500.0

Specificity: 1.0 Precision: 1.0 Recall: 0.208
CPU time used extracting features: 0.22232629300000184 seconds
CPU time used overall without disjunctions: 0.2320308300000029 seconds

Best ruleset with most influential features and decision trees with disjunctions:

platelets <= 200500.0 and platelets > 184500.0 or
ejection_fraction <= 62.5 and ejection_fraction <= 27.5 or
ejection_fraction > 62.5 or
serum_creatinine <= 0.65 and ejection_fraction > 34.0

Specificity: 0.833 Precision: 0.593 Recall: 0.667
CPU time used extracting features: 0.22232629300000184 seconds
CPU time used overall with disjunctions: 0.25439148600000294 seconds
