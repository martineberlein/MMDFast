Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['platelets', 'serum_creatinine', 'age']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

serum_creatinine > 0.62 and age > 69.21

Specificity: 0.867 Precision: 0.636 Recall: 0.467
CPU time used extracting features: 0.2074313020000016 seconds
CPU time used overall without disjunctions: 242.848265798 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

serum_creatinine > 0.62 and age > 69.21 or
serum_creatinine > 2.54 and serum_creatinine > 1.03 or
age > 51.73 and platelets > 379807.94

Specificity: 0.85 Precision: 0.679 Recall: 0.633
CPU time used extracting features: 0.2074313020000016 seconds
CPU time used overall with disjunctions: 700.644353541 seconds
