Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['recentActivityCount', 'NActivityInProject', 'InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.57 and activitysequence > 0.26

Specificity: 0.807 Precision: 0.295 Recall: 0.532
CPU time used extracting features: 0.8460222189999982 seconds
CPU time used overall without disjunctions: 223.69859237199998 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.57 and activitysequence > 0.26 or
projectCoverage <= 0.27 and activitysequence > 0.41

Specificity: 0.662 Precision: 0.256 Recall: 0.763
CPU time used extracting features: 0.8460222189999982 seconds
CPU time used overall with disjunctions: 480.515620185 seconds
