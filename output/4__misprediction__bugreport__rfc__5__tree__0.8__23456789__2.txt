Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['NActivityInProject', 'InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

activitysequence > 0.2178955 and activitysequence <= 0.6343565

Specificity: 0.744 Precision: 0.286 Recall: 0.663
CPU time used extracting features: 0.8716188809999998 seconds
CPU time used overall without disjunctions: 0.9100484669999993 seconds

Best ruleset with most influential features and decision trees with disjunctions:

activitysequence > 0.2178955 and activitysequence <= 0.6343565 or
activitysequence > 0.6413025 and InitialActivityCount > 1.4333335 or
activitysequence > 0.6413025 and projectCoverage <= 0.0081745 or
activitysequence > 0.6605855 and NActivityInProject <= 10912.0

Specificity: 0.559 Precision: 0.236 Recall: 0.884
CPU time used extracting features: 0.8716188809999998 seconds
CPU time used overall with disjunctions: 0.9409310620000007 seconds
