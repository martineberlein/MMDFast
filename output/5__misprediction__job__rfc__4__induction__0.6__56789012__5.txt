Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['last_new_job', 'experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Run MMD to create misprediction explanation with rule induction(MMD) without disjunctions...
Best ruleset with most influential features and rule induction(MMD) without disjunctions:

city_development_index <= 0.645

Specificity: 0.879 Precision: 0.475 Recall: 0.392
CPU time used extracting features: 0.9921172130000002 seconds
CPU time used overall without disjunctions: 71.816674705 seconds
Run MMD to create misprediction explanation with rule induction(MMD) with disjunctions...
Best ruleset with most influential features and rule induction(MMD) with disjunctions:

experience <= 7 or
city_development_index <= 0.74

Specificity: 0.517 Precision: 0.298 Recall: 0.714
CPU time used extracting features: 0.9921172130000002 seconds
CPU time used overall with disjunctions: 146.433780582 seconds
