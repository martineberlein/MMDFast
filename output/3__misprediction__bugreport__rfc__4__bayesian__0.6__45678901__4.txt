Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['InitialActivityCount', 'ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.70 and activitysequence > 0.24

Specificity: 0.722 Precision: 0.267 Recall: 0.638
CPU time used extracting features: 0.8838565420000002 seconds
CPU time used overall without disjunctions: 205.37663458999998 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.70 and activitysequence > 0.24

Specificity: 0.722 Precision: 0.267 Recall: 0.638
CPU time used extracting features: 0.8838565420000002 seconds
CPU time used overall with disjunctions: 205.37742762399998 seconds
