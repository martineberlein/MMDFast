Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Conductivity', 'Sulfate', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

Sulfate <= 381.55

Specificity: 0.138 Precision: 0.351 Recall: 0.95
CPU time used extracting features: 0.3983386539999998 seconds
CPU time used overall without disjunctions: 217.784766295 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

Sulfate <= 381.55

Specificity: 0.138 Precision: 0.351 Recall: 0.95
CPU time used extracting features: 0.3983386539999998 seconds
CPU time used overall with disjunctions: 217.786741885 seconds
