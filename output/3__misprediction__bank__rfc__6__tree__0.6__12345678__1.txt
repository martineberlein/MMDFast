Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['cons_price_idx', 'campaign', 'day_of_week', 'age', 'euribor3m', 'duration']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

duration > 545.5 and duration > 835.5

Specificity: 0.978 Precision: 0.468 Recall: 0.191
CPU time used extracting features: 1.365118557999999 seconds
CPU time used overall without disjunctions: 1.4574324049999987 seconds

Best ruleset with most influential features and decision trees with disjunctions:

duration > 545.5 and duration > 835.5 or
euribor3m <= 1.2755 and duration > 169.5 or
duration > 542.5 and cons_price_idx <= 93.956

Specificity: 0.892 Precision: 0.386 Recall: 0.672
CPU time used extracting features: 1.365118557999999 seconds
CPU time used overall with disjunctions: 1.489444744 seconds
