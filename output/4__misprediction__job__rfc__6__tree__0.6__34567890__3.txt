Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['relevent_experience', 'company_size_unknown', 'last_new_job', 'experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

city_development_index <= 0.6245 and training_hours <= 217.0

Specificity: 0.885 Precision: 0.466 Recall: 0.367
CPU time used extracting features: 1.076128251 seconds
CPU time used overall without disjunctions: 1.1099825579999987 seconds

Best ruleset with most influential features and decision trees with disjunctions:

city_development_index <= 0.6245 and training_hours <= 217.0 or
company_size_unknown > 0.5 and last_new_job > 0.5

Specificity: 0.735 Precision: 0.409 Recall: 0.672
CPU time used extracting features: 1.076128251 seconds
CPU time used overall with disjunctions: 1.1182200109999982 seconds
