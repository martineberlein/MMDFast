Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Conductivity', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

ph > 6.34 and ph <= 8.41

Specificity: 0.538 Precision: 0.403 Recall: 0.633
CPU time used extracting features: 0.38126470100000276 seconds
CPU time used overall without disjunctions: 166.323270089 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

ph > 6.34 and ph <= 8.41

Specificity: 0.538 Precision: 0.403 Recall: 0.633
CPU time used extracting features: 0.38126470100000276 seconds
CPU time used overall with disjunctions: 166.323931303 seconds
