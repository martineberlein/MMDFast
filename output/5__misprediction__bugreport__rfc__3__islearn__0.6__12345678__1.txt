Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['projectCoverage', 'ticketCleanedBodyLen', 'activitysequence']
Build new input dataframe with relevant features...
Preprocess data for islearn...
Construct string inputs...
['projectCoverage' 'ticketCleanedBodyLen' 'activitysequence' 'OOSLA'
 'misprediction']
['projectCoverage', 'ticketCleanedBodyLen', 'activitysequence']
New grammar...
{'<start>': ['<projectCoverage> <ticketCleanedBodyLen> <activitysequence>'], '<ticketCleanedBodyLen>': ['0', '<onenine><maybe_digits>'], '<activitysequence>': ['0', '<onenine><maybe_digits>'], '<projectCoverage>': ['0', '<onenine><maybe_digits>'], '<onenine>': ['1', '2', '3', '4', '5', '6', '7', '8', '9'], '<maybe_digits>': ['', '<digits>'], '<digits>': ['<digit>', '<digit><digits>'], '<digit>': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']}
Unrelevant nonterminals in grammar...
{'<digit>', '<digits>', '<onenine>', '<maybe_digits>'}
Run IsLearn to create misprediction explanation without disjunctions...
Best ruleset with most influential features and Islearn without disjunctions:

activitysequence > 0.24 and activitysequence <= 0.64

Specificity: 0.74 Precision: 0.277 Recall: 0.633
CPU time used extracting features: 0.9630088430000008 seconds
CPU time used overall without disjunctions: 230.588871919 seconds
