Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['company_size_unknown', 'last_new_job', 'experience', 'city_development_index', 'training_hours']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

training_hours <= 271.98 and city_development_index <= 0.66

Specificity: 0.878 Precision: 0.472 Recall: 0.381
CPU time used extracting features: 0.9743937909999971 seconds
CPU time used overall without disjunctions: 260.983113259 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

training_hours <= 271.98 and city_development_index <= 0.66 or
company_size_unknown > 0.22 and last_new_job > 0.65

Specificity: 0.738 Precision: 0.423 Recall: 0.669
CPU time used extracting features: 0.9743937909999971 seconds
CPU time used overall with disjunctions: 493.07702473700004 seconds
