Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_added', 'line_removed', 'duration', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.921 Precision: 0.344 Recall: 0.564
CPU time used extracting features: 1.5179049679999999 seconds
CPU time used overall without disjunctions: 1.6211328000000016 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and line_added > 755.5 or
parallel_changed_file_num > 0.5 and duration <= 0.5

Specificity: 0.868 Precision: 0.33 Recall: 0.884
CPU time used extracting features: 1.5179049679999999 seconds
CPU time used overall with disjunctions: 1.6479569890000008 seconds
