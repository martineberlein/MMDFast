Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['file_modified', 'line_added', 'line_removed', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and file_modified > 30.5

Specificity: 0.98 Precision: 0.41 Recall: 0.198
CPU time used extracting features: 1.6026104080000003 seconds
CPU time used overall without disjunctions: 1.7071398799999997 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and file_modified > 30.5 or
parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and line_removed <= -3592.5

Specificity: 0.878 Precision: 0.318 Recall: 0.793
CPU time used extracting features: 1.6026104080000003 seconds
CPU time used overall with disjunctions: 1.7385046300000013 seconds
