Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['developer_num', 'file_modified', 'line_added', 'line_removed', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and developer_num > -0.5

Specificity: 0.935 Precision: 0.336 Recall: 0.608
CPU time used extracting features: 1.3276224270000014 seconds
CPU time used overall without disjunctions: 1.4434056030000022 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and developer_num > -0.5

Specificity: 0.935 Precision: 0.336 Recall: 0.608
CPU time used extracting features: 1.3276224270000014 seconds
CPU time used overall with disjunctions: 1.4434290569999995 seconds
