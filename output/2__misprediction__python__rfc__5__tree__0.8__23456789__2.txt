Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_removed', 'file_modified', 'line_added', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.927 Precision: 0.332 Recall: 0.566
CPU time used extracting features: 1.368515819999999 seconds
CPU time used overall without disjunctions: 1.46729354 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and file_modified > 2.5 or
parallel_changed_file_num > 0.5 and line_added > 117.0 or
parallel_changed_file_num > 0.5 and line_removed <= -2690.5

Specificity: 0.886 Precision: 0.32 Recall: 0.84
CPU time used extracting features: 1.368515819999999 seconds
CPU time used overall with disjunctions: 1.5097974520000008 seconds
