Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['platelets', 'creatinine_phosphokinase', 'ejection_fraction']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

ejection_fraction <= 32.5 and creatinine_phosphokinase > 87.0

Specificity: 0.831 Precision: 0.577 Recall: 0.6
CPU time used extracting features: 0.24707117000000167 seconds
CPU time used overall without disjunctions: 0.2524566080000028 seconds

Best ruleset with most influential features and decision trees with disjunctions:

ejection_fraction <= 32.5 and creatinine_phosphokinase > 87.0

Specificity: 0.831 Precision: 0.577 Recall: 0.6
CPU time used extracting features: 0.24707117000000167 seconds
CPU time used overall with disjunctions: 0.25248559200000287 seconds
