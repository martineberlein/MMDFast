Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['file_modified', 'line_added', 'line_removed', 'duration', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5

Specificity: 0.921 Precision: 0.344 Recall: 0.564
CPU time used extracting features: 1.5060645729999997 seconds
CPU time used overall without disjunctions: 1.6637484289999982 seconds

Best ruleset with most influential features and decision trees with disjunctions:

parallel_changed_file_num > 0.5 and parallel_changed_file_num > 1.5 or
parallel_changed_file_num > 0.5 and line_added > 755.5

Specificity: 0.913 Precision: 0.357 Recall: 0.654
CPU time used extracting features: 1.5060645729999997 seconds
CPU time used overall with disjunctions: 1.6778990089999972 seconds
