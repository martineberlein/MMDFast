Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['ticketCleanedBodyLen', 'projectCoverage', 'activitysequence']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

activitysequence <= 0.54 and activitysequence > 0.36

Specificity: 0.895 Precision: 0.32 Recall: 0.326
CPU time used extracting features: 0.8509824669999979 seconds
CPU time used overall without disjunctions: 182.72077746 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

activitysequence <= 0.54 and activitysequence > 0.36 or
activitysequence <= 0.86 and activitysequence > 0.18

Specificity: 0.628 Precision: 0.252 Recall: 0.822
CPU time used extracting features: 0.8509824669999979 seconds
CPU time used overall with disjunctions: 402.040367543 seconds
