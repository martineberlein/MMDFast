Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['campaign', 'day_of_week', 'age', 'euribor3m', 'duration']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

day_of_week <= 4.91 and duration > 661.39

Specificity: 0.969 Precision: 0.46 Recall: 0.273
CPU time used extracting features: 0.9813354970000034 seconds
CPU time used overall without disjunctions: 218.66614526700002 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

day_of_week <= 4.91 and duration > 661.39 or
age <= 42.95 and duration > 569.14

Specificity: 0.95 Precision: 0.429 Recall: 0.383
CPU time used extracting features: 0.9813354970000034 seconds
CPU time used overall with disjunctions: 448.625459997 seconds
