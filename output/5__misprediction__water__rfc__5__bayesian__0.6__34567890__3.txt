Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Sulfate', 'Chloramines', 'Hardness', 'Conductivity', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

Conductivity <= 463.65 and ph > 5.96

Specificity: 0.523 Precision: 0.385 Recall: 0.608
CPU time used extracting features: 0.3783257760000005 seconds
CPU time used overall without disjunctions: 197.80569455799997 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

Conductivity <= 463.65 and ph > 5.96

Specificity: 0.523 Precision: 0.385 Recall: 0.608
CPU time used extracting features: 0.3783257760000005 seconds
CPU time used overall with disjunctions: 197.806522872 seconds
