Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['adr', 'lead_time']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

lead_time > 7.5 and lead_time <= 229.5

Specificity: 0.339 Precision: 0.208 Recall: 0.872
CPU time used extracting features: 1.1717824410000013 seconds
CPU time used overall without disjunctions: 1.2016420360000026 seconds

Best ruleset with most influential features and decision trees with disjunctions:

lead_time > 7.5 and lead_time <= 229.5

Specificity: 0.339 Precision: 0.208 Recall: 0.872
CPU time used extracting features: 1.1717824410000013 seconds
CPU time used overall with disjunctions: 1.2016853070000018 seconds
