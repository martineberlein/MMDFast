Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['Hardness', 'Conductivity', 'ph']
Build new input dataframe with relevant features...
Create misprediction explanation by learning decision trees...
Best ruleset with most influential features and decision trees without disjunctions:

ph > 5.4796481 and Conductivity > 460.2273102

Specificity: 0.741 Precision: 0.441 Recall: 0.419
CPU time used extracting features: 0.49405756999999895 seconds
CPU time used overall without disjunctions: 0.5208029180000011 seconds

Best ruleset with most influential features and decision trees with disjunctions:

ph > 5.4796481 and Conductivity > 460.2273102 or
ph > 5.8840034 and Conductivity <= 368.2585297

Specificity: 0.571 Precision: 0.431 Recall: 0.667
CPU time used extracting features: 0.49405756999999895 seconds
CPU time used overall with disjunctions: 0.5267869060000017 seconds
