Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['campaign', 'day_of_week', 'euribor3m', 'age', 'duration']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

day_of_week > 1.37 and duration > 744.37

Specificity: 0.976 Precision: 0.442 Recall: 0.194
CPU time used extracting features: 0.9651214639999992 seconds
CPU time used overall without disjunctions: 274.91321703899996 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

day_of_week > 1.37 and duration > 744.37 or
euribor3m <= 1.12 and age <= 74.34 or
duration > 512.17 and duration > 582.32 or
duration > 528.19 and age <= 47.70 or
age <= 58.65 and duration > 466.12 or
age > 61.03 and age > 62.44 or
duration > 378.61 and euribor3m <= 1.86

Specificity: 0.824 Precision: 0.308 Recall: 0.808
CPU time used extracting features: 0.9651214639999992 seconds
CPU time used overall with disjunctions: 1835.3779244090001 seconds
