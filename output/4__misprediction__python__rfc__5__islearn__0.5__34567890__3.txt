Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['line_removed', 'file_modified', 'duration', 'commit_num', 'parallel_changed_file_num']
Build new input dataframe with relevant features...
Preprocess data for islearn...
Construct string inputs...
['line_removed' 'file_modified' 'duration' 'commit_num'
 'parallel_changed_file_num' 'is_conflict' 'misprediction']
['line_removed', 'file_modified', 'duration', 'commit_num', 'parallel_changed_file_num']
New grammar...
{'<start>': ['<line_removed> <file_modified> <duration> <commit_num> <parallel_changed_file_num>'], '<parallel_changed_file_num>': ['0', '<onenine><maybe_digits>'], '<commit_num>': ['0', '<onenine><maybe_digits>'], '<file_modified>': ['0', '<onenine><maybe_digits>'], '<line_removed>': ['0', '<onenine><maybe_digits>'], '<duration>': ['0', '<onenine><maybe_digits>'], '<onenine>': ['1', '2', '3', '4', '5', '6', '7', '8', '9'], '<maybe_digits>': ['', '<digits>'], '<digits>': ['<digit>', '<digit><digits>'], '<digit>': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']}
Unrelevant nonterminals in grammar...
{'<digit>', '<maybe_digits>', '<onenine>', '<digits>'}
Run IsLearn to create misprediction explanation without disjunctions...
Best ruleset with most influential features and Islearn without disjunctions:

commit_num <= 251.0 and parallel_changed_file_num > 1.0

Specificity: 0.938 Precision: 0.361 Recall: 0.541
CPU time used extracting features: 1.3145260599999986 seconds
CPU time used overall without disjunctions: 714.6484620030001 seconds
