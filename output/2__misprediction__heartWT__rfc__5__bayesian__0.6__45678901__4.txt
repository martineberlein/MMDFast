Loading model from .joblib...
Check which test inputs are mispredicted by the model...
Learn most influential input features...
Train random forest classifier on misprediction data...
Use feature importance to explain model...
Most influential features:
['creatinine_phosphokinase', 'platelets', 'serum_sodium', 'serum_creatinine', 'age']
Build new input dataframe with relevant features...
Create misprediction explanation utilizing bayesian optimization...
Best ruleset with most influential features and bayesian optimization without disjunctions:

platelets <= 380352.46 and serum_creatinine > 5.44

Specificity: 1.0 Precision: 1.0 Recall: 0.13
CPU time used extracting features: 0.20669587499999764 seconds
CPU time used overall without disjunctions: 235.366513239 seconds

Best ruleset with most influential features and bayesian optimization with disjunctions:

platelets <= 380352.46 and serum_creatinine > 5.44 or
platelets <= 336296.12 and age > 70.81 or
serum_sodium <= 134.89 and platelets <= 522882.95

Specificity: 0.687 Precision: 0.475 Recall: 0.826
CPU time used extracting features: 0.20669587499999764 seconds
CPU time used overall with disjunctions: 667.6863500100001 seconds
